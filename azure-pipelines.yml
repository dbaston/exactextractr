# R package
# Test an R package

variables:
  CI: true

jobs:
  - job: 'Linux'
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      matrix:
        rel:
          containerImage: rocker/geospatial:latest
        dev:
          containerImage: rocker/geospatial:devel
    variables:
      R_LIBS_USER: '$(Agent.BuildDirectory)/R/library'
    container: $[ variables['containerImage'] ]
    steps:
      - script: |
           Rscript -e "remotes::install_deps(dependencies = TRUE)"
        displayName: 'Install package dependencies'
      - script: |
           Rscript -e 'devtools::document()'
           Rscript -e 'rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning")'
        displayName: 'Check package'

  - job: 'macOS'
    pool:
      vmImage: 'macOS-10.13'
    variables:
      R_LIBS_USER: '$(Agent.BuildDirectory)/R/library'
      CRAN: 'https://cloud.r-project.org'
    steps:
      - script: |
           curl -fLo /tmp/R.pkg "$(CRAN)/bin/macosx/R-latest.pkg"
           sudo installer -pkg "/tmp/R.pkg" -target /
           rm /tmp/R.pkg
        displayName: 'Installing R'
      - script: |
           /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
           brew install geos
        displayName: 'Installing system dependencies'
      - script: |
           echo 'options(repos = "$(CRAN)")' > ~/.Rprofile
           mkdir -p ${R_LIBS_USER}
           R -e "install.packages(c('remotes', 'rcmdcheck', 'xml2', 'roxygen2'))"
           Rscript -e "remotes::install_deps(dependencies = TRUE)" -e "remotes::install_github('r-lib/covr')"
        displayName: 'Install package dependencies'
      - script: |
          Rscript -e 'roxygen2::roxygenize()'
          Rscript -e 'rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")'
        displayName: 'Check package'
      - task: PublishTestResults@1
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'check/*.Rcheck/tests/test-*.xml'
      - script: Rscript -e 'cov <- covr::package_coverage()' -e 'covr::to_cobertura(cov, "coverage.xml")'
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'Cobertura'
          summaryFileLocation: 'coverage.xml'

  - job: 'Windows'
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      R_LIBS_USER: '$(Agent.BuildDirectory)/R/library'
      CRAN: 'https://cloud.r-project.org'
    steps:
      - script: |
      - pwsh: |
           choco install r --no-progress
        displayName: 'Installing R'
      - script: |
           curl -Lo Rtools.exe "https://cran.r-project.org/bin/windows/Rtools/Rtools35.exe"
           Rtools.exe /SILENT /SP- /NORESTART
           rm Rtools.exe
      - script: |
           set PATH=%PATH%;C:\Progra~1\R\R-3.6.0\bin
           echo options(repos = "$(CRAN)") > %HOMEDRIVE%%HOMEPATH%/Documents/.Rprofile
           mkdir $(R_LIBS_USER)
           R -e "install.packages(c('remotes', 'rcmdcheck', 'roxygen2'))"
           Rscript -e "remotes::install_deps(dependencies = TRUE)"
        displayName: 'Install package dependencies'
      - script: |
           set PATH=%PATH%;C:\Progra~1\R\R-3.6.0\bin
           Rscript -e "roxygen2::roxygenize()"
           Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'warning')"
        displayName: 'Check package'
